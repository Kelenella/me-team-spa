{"version":3,"file":"static/js/745.38612795.chunk.js","mappings":"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","sources":["webpack://me-team-spa/./src/components/FilterBar/FilterBar.module.css?a443","components/FilterBar/FilterBar.js","hooks/usePagination.js","webpack://me-team-spa/./src/components/CardsGallery/CardsGallery.module.css?047d","components/CardsGallery/CardsGallery.js","services/photosAPI.js","webpack://me-team-spa/./src/_pages/MainPage/MainPage.module.css?c760","_pages/MainPage/MainPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"FilterBar_label__zMUhm\",\"input\":\"FilterBar_input__WZAcJ\"};","import PropTypes from \"prop-types\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport s from \"./FilterBar.module.css\";\n\nexport default function FilterBar({ value, onChange }) {\n  return (\n    <>\n      <div>\n        <label className={s.label}>\n          Введите название альбома\n          <input\n            className={s.input}\n            type=\"text\"\n            value={value}\n            onChange={onChange}\n          />\n        </label>\n      </div>\n    </>\n  );\n}\n\nFilterBar.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { useState } from \"react\";\n\nconst usePagination = ({ contentPerPage, count }) => {\n  const [page, setPage] = useState(1);\n  // number of pages in total (total items / content on each page)\n\n  const pageCount = Math.ceil(count / contentPerPage);\n  // index of last item of current page\n\n  const lastContentIndex = page * contentPerPage;\n  // index of first item of current page\n\n  const firstContentIndex = lastContentIndex - contentPerPage;\n  // change page based on direction either front or back\n\n  const changePage = (direction) => {\n    setPage((state) => {\n      // move forward\n      if (direction) {\n        // if page is the last page, do nothing\n        if (state === pageCount) {\n          return state;\n        }\n        return state + 1;\n        // go back\n      } else {\n        // if page is the first page, do nothing\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n  const setPageSAFE = (num) => {\n    // if number is greater than number of pages, set to last page\n    if (num > pageCount) {\n      setPage(pageCount);\n      // if number is less than 1, set page to first page\n    } else if (num < 1) {\n      setPage(1);\n    } else {\n      setPage(num);\n    }\n  };\n  return {\n    totalPages: pageCount,\n    nextPage: () => changePage(true),\n    prevPage: () => changePage(false),\n    setPage: setPageSAFE,\n    firstContentIndex,\n    lastContentIndex,\n    page,\n  };\n};\nexport default usePagination;\n","// extracted by mini-css-extract-plugin\nexport default {\"cardsWrapper\":\"CardsGallery_cardsWrapper__jh6WX\",\"list\":\"CardsGallery_list__DeyTm\",\"item\":\"CardsGallery_item__tNBd8\",\"numberAlbum\":\"CardsGallery_numberAlbum__22T8K\",\"title\":\"CardsGallery_title__+aTuD\",\"img\":\"CardsGallery_img__ADiNe\",\"filteredWrap\":\"CardsGallery_filteredWrap__PUN1v\"};","import { NavLink } from \"react-router-dom\";\nimport EllipsisText from \"react-ellipsis-text\";\nimport usePagination from \"../../hooks/usePagination\";\nimport s from \"./CardsGallery.module.css\";\n\nexport default function CardsGallery({ cards, setCards, filter }) {\n  const {\n    firstContentIndex,\n    lastContentIndex,\n    nextPage,\n    prevPage,\n    page,\n    setPage,\n    totalPages,\n  } = usePagination({\n    contentPerPage: 9,\n    count: cards.length,\n  });\n\n  return (\n    <>\n      <div className={s.cardsWrapper}>\n        {/* <div className={s.filteredWrap}>\n          <ul>\n            {!filter &&\n              filter.map((filter) => (\n                <li className={s.item} key={filter.id}>\n                  <p>{filter.title}</p>\n                </li>\n              ))}\n          </ul>\n        </div> */}\n        <ul className={s.list}>\n          {filter &&\n            filter.slice(firstContentIndex, lastContentIndex).map((filter) => (\n              <li key={filter.id} className={s.item}>\n                <p className={s.numberAlbum}>{filter.albumId}</p>\n                <p className={s.title}>\n                  <EllipsisText text={filter.title} length={25} />\n                </p>\n                <img\n                  src={filter.thumbnailUrl}\n                  alt=\"картинка\"\n                  className={s.img}\n                />\n                <button>\n                  <NavLink className={s.navLink} to=\"/details\">\n                    Подробно\n                  </NavLink>\n                </button>\n              </li>\n            ))}\n        </ul>\n        <div className=\"pagination\">\n          <p className=\"text\">\n            {page}/{totalPages}\n          </p>\n          <button onClick={prevPage} className=\"page\">\n            &larr;\n          </button>\n          {/* @ts-ignore */}\n          {[...Array(totalPages).keys()].map((el) => (\n            <button\n              onClick={() => setPage(el + 1)}\n              key={el}\n              className={`page ${page === el + 1 ? \"active\" : \"\"}`}\n            >\n              {el + 1}\n            </button>\n          ))}\n          <button onClick={nextPage} className=\"page\">\n            &rarr;\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://jsonplaceholder.typicode.com/photos\";\n\nconst getAllCardsAPI = async () => {\n  try {\n    const data = await axios\n      .get(axios.defaults.baseURL)\n      .then((response) => response.data);\n\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getCardById = async () => {\n  try {\n    const data = await axios\n      .get(axios.defaults.baseURL)\n      .then((response) => response.data);\n\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport default getAllCardsAPI;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MainPage_wrapper__alKIF\",\"navLink\":\"MainPage_navLink__J4vJu\"};","import { useState, useEffect } from \"react\";\nimport FilterBar from \"../../components/FilterBar\";\nimport CardsGallery from \"../../components/CardsGallery\";\nimport getAllCardsAPI from \"../../services/photosAPI\";\nimport s from \"./MainPage.module.css\";\n\nexport default function MainPage() {\n  const [cards, setCards] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    getAllCardsAPI(cards).then((cards) => {\n      setCards(() => [...cards]);\n    });\n  }, []);\n\n  const changeFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const getVisibleCard = () => {\n    const cardFilter = filter.toLowerCase();\n\n    return cards.filter((card) =>\n      card.title.toLowerCase().includes(cardFilter)\n    );\n  };\n\n  // const addToFavorite = (filterId) => {\n  //   setCards(cards.filter((card) => card.id !== filterId));\n  // };\n\n  return (\n    <>\n      <div className={s.wrapper}>\n        <FilterBar value={filter} onChange={changeFilter} />\n      </div>\n\n      <CardsGallery\n        cards={cards}\n        setCards={setCards}\n        filter={getVisibleCard()}\n      />\n    </>\n  );\n}\n"],"names":["FilterBar","value","onChange","className","s","type","contentPerPage","count","useState","page","setPage","pageCount","Math","ceil","lastContentIndex","changePage","direction","state","totalPages","nextPage","prevPage","num","firstContentIndex","CardsGallery","cards","filter","setCards","usePagination","length","slice","map","albumId","text","title","src","thumbnailUrl","alt","to","id","onClick","Array","keys","el","axios","getAllCardsAPI","then","response","data","console","log","message","MainPage","setFilter","useEffect","e","target","cardFilter","toLowerCase","card","includes","getVisibleCard"],"sourceRoot":""}